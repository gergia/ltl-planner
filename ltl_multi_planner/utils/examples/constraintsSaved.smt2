(declare-fun obstacle (Int Int) Bool)

(declare-const total_cost Real)

(declare-const total_cost_1 Real)
(declare-const total_cost_2 Real)
(declare-const prim_1_1 Int)
(declare-const prim_2_1 Int)

(declare-const x_1_1 Int)
(declare-const x_1_2 Int)
(declare-const x_2_1 Int)
(declare-const x_2_2 Int)

(declare-const y_1_1 Int)
(declare-const y_1_2 Int)
(declare-const y_2_1 Int)
(declare-const y_2_2 Int)

(declare-const vel_i_1_1 Int)
(declare-const vel_i_1_2 Int)
(declare-const vel_i_2_1 Int)
(declare-const vel_i_2_2 Int)

(declare-const vel_f_1_1 Int)
(declare-const vel_f_2_1 Int)

(declare-const x_f_1_1 Int)
(declare-const x_f_2_1 Int)

(declare-const y_f_1_1 Int)
(declare-const y_f_2_1 Int)

(declare-const cost_1_1 Real)
(declare-const cost_2_1 Real)

(declare-const p_1_1 Bool)
(declare-const p_1_2 Bool)
(declare-const p_2_1 Bool)
(declare-const p_2_2 Bool)
(declare-const f_1_1 Bool)
(declare-const p_3_1 Bool)
(declare-const p_3_2 Bool)
(declare-const p_4_1 Bool)
(declare-const p_4_2 Bool)
(declare-const f_2_1 Bool)


(declare-const l_0 Bool)
(declare-const l_1 Bool)
(declare-const l_2 Bool)
(declare-const inloop_0 Bool)
(declare-const inloop_1 Bool)
(declare-const inloop_2 Bool)
(declare-const inloop_3 Bool)
(declare-const loopexists Bool)
(declare-const loc1_1 Bool)
(declare-const loc1_2 Bool)
(declare-const loc2_1 Bool)
(declare-const loc2_2 Bool)
(declare-const loc3_1 Bool)
(declare-const loc3_2 Bool)

(declare-const r1loc1 Bool)
(declare-const assigned_r1_loc1 Bool)
(declare-const r2loc1 Bool)
(declare-const assigned_r2_loc1 Bool)
(declare-const r1loc2 Bool)
(declare-const assigned_r1_loc2 Bool)
(declare-const r2loc2 Bool)
(declare-const assigned_r2_loc2 Bool)
(declare-const r1loc3 Bool)
(declare-const assigned_r1_loc3 Bool)
(declare-const r2loc3 Bool)
(declare-const assigned_r2_loc3 Bool)

(declare-const r1loc1_1 Bool)
(declare-const r1loc1_2 Bool)
(declare-const r2loc1_1 Bool)
(declare-const r2loc1_2 Bool)
(declare-const r1loc2_1 Bool)
(declare-const r1loc2_2 Bool)
(declare-const r2loc2_1 Bool)
(declare-const r2loc2_2 Bool)
(declare-const r1loc3_1 Bool)
(declare-const r1loc3_2 Bool)
(declare-const r2loc3_1 Bool)
(declare-const r2loc3_2 Bool)

(assert (= x_1_1 3))
(assert (= y_1_1 10))
(assert (= x_2_1 5))
(assert (= y_2_1 2))


(assert (= (obstacle 0 0) true))
(assert (= (obstacle 0 1) true))
(assert (= (obstacle 0 2) true))
(assert (= (obstacle 0 3) true))
(assert (= (obstacle 0 4) true))
(assert (= (obstacle 0 5) true))
(assert (= (obstacle 0 6) true))
(assert (= (obstacle 0 7) true))
(assert (= (obstacle 0 8) true))
(assert (= (obstacle 0 9) true))
(assert (= (obstacle 0 10) true))
(assert (= (obstacle 0 11) true))
(assert (= (obstacle 0 12) true))
(assert (= (obstacle 1 0) true))
(assert (= (obstacle 1 12) true))
(assert (= (obstacle 2 0) true))
(assert (= (obstacle 2 12) true))
(assert (= (obstacle 3 0) true))
(assert (= (obstacle 3 12) true))
(assert (= (obstacle 4 0) true))
(assert (= (obstacle 4 12) true))
(assert (= (obstacle 5 0) true))
(assert (= (obstacle 5 12) true))
(assert (= (obstacle 6 0) true))
(assert (= (obstacle 6 10) true))
(assert (= (obstacle 6 11) true))
(assert (= (obstacle 6 12) true))
(assert (= (obstacle 7 0) true))
(assert (= (obstacle 7 10) true))
(assert (= (obstacle 7 11) true))
(assert (= (obstacle 7 12) true))
(assert (= (obstacle 8 0) true))
(assert (= (obstacle 8 1) true))
(assert (= (obstacle 8 2) true))
(assert (= (obstacle 8 3) true))
(assert (= (obstacle 8 4) true))
(assert (= (obstacle 8 5) true))
(assert (= (obstacle 8 6) true))
(assert (= (obstacle 8 7) true))
(assert (= (obstacle 8 8) true))
(assert (= (obstacle 8 9) true))
(assert (= (obstacle 8 10) true))
(assert (= (obstacle 8 11) true))


(assert (= vel_i_1_1 0))
(assert (= vel_f_1_1 0))
(assert (= vel_i_2_1 0))
(assert (= vel_f_2_1 0))

(assert (and (>= prim_1_1 1) (<= prim_1_1 9)))
(assert (and (>= prim_2_1 1) (<= prim_2_1 9)))



(assert (and (>= x_1_1 0) (<= x_1_1 8)))
(assert (and (>= x_1_2 0) (<= x_1_2 8)))
(assert (and (>= x_2_1 0) (<= x_2_1 8)))
(assert (and (>= x_2_2 0) (<= x_2_2 8)))

(assert (and (>= y_1_1 0) (<= y_1_1 12)))
(assert (and (>= y_1_2 0) (<= y_1_2 12)))
(assert (and (>= y_2_1 0) (<= y_2_1 12)))
(assert (and (>= y_2_2 0) (<= y_2_2 12)))

(assert (or (not (= prim_1_1 1))
(and (= vel_i_1_1 0)
     (= vel_f_1_1 0)
     (= x_f_1_1 0)
     (= y_f_1_1 0)
     (= (obstacle (+ x_1_1 0) (+ y_1_1 0)) false)
)))

(assert (or (not (= prim_1_1 2))
(and (= vel_i_1_1 0)
     (= vel_f_1_1 0)
     (= x_f_1_1 1)
     (= y_f_1_1 0)
     (= (obstacle (+ x_1_1 0) (+ y_1_1 0)) false)
     (= (obstacle (+ x_1_1 1) (+ y_1_1 0)) false)
)))

(assert (or (not (= prim_1_1 3))
(and (= vel_i_1_1 0)
     (= vel_f_1_1 0)
     (= x_f_1_1 -1)
     (= y_f_1_1 0)
     (= (obstacle (+ x_1_1 0) (+ y_1_1 0)) false)
     (= (obstacle (+ x_1_1 -1) (+ y_1_1 0)) false)
)))

(assert (or (not (= prim_1_1 4))
(and (= vel_i_1_1 0)
     (= vel_f_1_1 0)
     (= x_f_1_1 0)
     (= y_f_1_1 1)
     (= (obstacle (+ x_1_1 0) (+ y_1_1 0)) false)
     (= (obstacle (+ x_1_1 0) (+ y_1_1 1)) false)
)))

(assert (or (not (= prim_1_1 5))
(and (= vel_i_1_1 0)
     (= vel_f_1_1 0)
     (= x_f_1_1 0)
     (= y_f_1_1 -1)
     (= (obstacle (+ x_1_1 0) (+ y_1_1 0)) false)
     (= (obstacle (+ x_1_1 0) (+ y_1_1 -1)) false)
)))

(assert (or (not (= prim_1_1 6))
(and (= vel_i_1_1 0)
     (= vel_f_1_1 0)
     (= x_f_1_1 1)
     (= y_f_1_1 1)
     (= (obstacle (+ x_1_1 0) (+ y_1_1 0)) false)
     (= (obstacle (+ x_1_1 1) (+ y_1_1 0)) false)
     (= (obstacle (+ x_1_1 0) (+ y_1_1 1)) false)
     (= (obstacle (+ x_1_1 1) (+ y_1_1 1)) false)
)))

(assert (or (not (= prim_1_1 7))
(and (= vel_i_1_1 0)
     (= vel_f_1_1 0)
     (= x_f_1_1 -1)
     (= y_f_1_1 1)
     (= (obstacle (+ x_1_1 0) (+ y_1_1 0)) false)
     (= (obstacle (+ x_1_1 -1) (+ y_1_1 0)) false)
     (= (obstacle (+ x_1_1 0) (+ y_1_1 1)) false)
     (= (obstacle (+ x_1_1 -1) (+ y_1_1 1)) false)
)))

(assert (or (not (= prim_1_1 8))
(and (= vel_i_1_1 0)
     (= vel_f_1_1 0)
     (= x_f_1_1 1)
     (= y_f_1_1 -1)
     (= (obstacle (+ x_1_1 0) (+ y_1_1 0)) false)
     (= (obstacle (+ x_1_1 1) (+ y_1_1 0)) false)
     (= (obstacle (+ x_1_1 0) (+ y_1_1 -1)) false)
     (= (obstacle (+ x_1_1 1) (+ y_1_1 -1)) false)
)))

(assert (or (not (= prim_1_1 9))
(and (= vel_i_1_1 0)
     (= vel_f_1_1 0)
     (= x_f_1_1 -1)
     (= y_f_1_1 -1)
     (= (obstacle (+ x_1_1 0) (+ y_1_1 0)) false)
     (= (obstacle (+ x_1_1 -1) (+ y_1_1 0)) false)
     (= (obstacle (+ x_1_1 0) (+ y_1_1 -1)) false)
     (= (obstacle (+ x_1_1 -1) (+ y_1_1 -1)) false)
)))

(assert (or (not (= prim_2_1 1))
(and (= vel_i_2_1 0)
     (= vel_f_2_1 0)
     (= x_f_2_1 0)
     (= y_f_2_1 0)
     (= (obstacle (+ x_2_1 0) (+ y_2_1 0)) false)
)))

(assert (or (not (= prim_2_1 2))
(and (= vel_i_2_1 0)
     (= vel_f_2_1 0)
     (= x_f_2_1 1)
     (= y_f_2_1 0)
     (= (obstacle (+ x_2_1 0) (+ y_2_1 0)) false)
     (= (obstacle (+ x_2_1 1) (+ y_2_1 0)) false)
)))

(assert (or (not (= prim_2_1 3))
(and (= vel_i_2_1 0)
     (= vel_f_2_1 0)
     (= x_f_2_1 -1)
     (= y_f_2_1 0)
     (= (obstacle (+ x_2_1 0) (+ y_2_1 0)) false)
     (= (obstacle (+ x_2_1 -1) (+ y_2_1 0)) false)
)))

(assert (or (not (= prim_2_1 4))
(and (= vel_i_2_1 0)
     (= vel_f_2_1 0)
     (= x_f_2_1 0)
     (= y_f_2_1 1)
     (= (obstacle (+ x_2_1 0) (+ y_2_1 0)) false)
     (= (obstacle (+ x_2_1 0) (+ y_2_1 1)) false)
)))

(assert (or (not (= prim_2_1 5))
(and (= vel_i_2_1 0)
     (= vel_f_2_1 0)
     (= x_f_2_1 0)
     (= y_f_2_1 -1)
     (= (obstacle (+ x_2_1 0) (+ y_2_1 0)) false)
     (= (obstacle (+ x_2_1 0) (+ y_2_1 -1)) false)
)))

(assert (or (not (= prim_2_1 6))
(and (= vel_i_2_1 0)
     (= vel_f_2_1 0)
     (= x_f_2_1 1)
     (= y_f_2_1 1)
     (= (obstacle (+ x_2_1 0) (+ y_2_1 0)) false)
     (= (obstacle (+ x_2_1 1) (+ y_2_1 0)) false)
     (= (obstacle (+ x_2_1 0) (+ y_2_1 1)) false)
     (= (obstacle (+ x_2_1 1) (+ y_2_1 1)) false)
)))

(assert (or (not (= prim_2_1 7))
(and (= vel_i_2_1 0)
     (= vel_f_2_1 0)
     (= x_f_2_1 -1)
     (= y_f_2_1 1)
     (= (obstacle (+ x_2_1 0) (+ y_2_1 0)) false)
     (= (obstacle (+ x_2_1 -1) (+ y_2_1 0)) false)
     (= (obstacle (+ x_2_1 0) (+ y_2_1 1)) false)
     (= (obstacle (+ x_2_1 -1) (+ y_2_1 1)) false)
)))

(assert (or (not (= prim_2_1 8))
(and (= vel_i_2_1 0)
     (= vel_f_2_1 0)
     (= x_f_2_1 1)
     (= y_f_2_1 -1)
     (= (obstacle (+ x_2_1 0) (+ y_2_1 0)) false)
     (= (obstacle (+ x_2_1 1) (+ y_2_1 0)) false)
     (= (obstacle (+ x_2_1 0) (+ y_2_1 -1)) false)
     (= (obstacle (+ x_2_1 1) (+ y_2_1 -1)) false)
)))

(assert (or (not (= prim_2_1 9))
(and (= vel_i_2_1 0)
     (= vel_f_2_1 0)
     (= x_f_2_1 -1)
     (= y_f_2_1 -1)
     (= (obstacle (+ x_2_1 0) (+ y_2_1 0)) false)
     (= (obstacle (+ x_2_1 -1) (+ y_2_1 0)) false)
     (= (obstacle (+ x_2_1 0) (+ y_2_1 -1)) false)
     (= (obstacle (+ x_2_1 -1) (+ y_2_1 -1)) false)
)))


(assert (= x_1_2 (+ x_1_1 x_f_1_1)))
(assert (= y_1_2 (+ y_1_1 y_f_1_1)))
(assert (= x_2_2 (+ x_2_1 x_f_2_1)))
(assert (= y_2_2 (+ y_2_1 y_f_2_1)))



(assert (or (not (and (not loopexists) (= prim_1_1 1)))
     (= cost_1_1 0)
))
(assert (or (not (and loopexists (and true (not l_0) 
) (= prim_1_1 1)))
     (= cost_1_1 0)
))
(assert (or (not (and loopexists (or false  l_0 
) (= prim_1_1 1)))
     (= cost_1_1 1000)
))

(assert (or (not (and (not loopexists) (= prim_1_1 2)))
     (= cost_1_1 1)
))
(assert (or (not (and loopexists (and true (not l_0) 
) (= prim_1_1 2)))
     (= cost_1_1 1)
))
(assert (or (not (and loopexists (or false  l_0 
) (= prim_1_1 2)))
     (= cost_1_1 1000)
))

(assert (or (not (and (not loopexists) (= prim_1_1 3)))
     (= cost_1_1 1)
))
(assert (or (not (and loopexists (and true (not l_0) 
) (= prim_1_1 3)))
     (= cost_1_1 1)
))
(assert (or (not (and loopexists (or false  l_0 
) (= prim_1_1 3)))
     (= cost_1_1 1000)
))

(assert (or (not (and (not loopexists) (= prim_1_1 4)))
     (= cost_1_1 1)
))
(assert (or (not (and loopexists (and true (not l_0) 
) (= prim_1_1 4)))
     (= cost_1_1 1)
))
(assert (or (not (and loopexists (or false  l_0 
) (= prim_1_1 4)))
     (= cost_1_1 1000)
))

(assert (or (not (and (not loopexists) (= prim_1_1 5)))
     (= cost_1_1 1)
))
(assert (or (not (and loopexists (and true (not l_0) 
) (= prim_1_1 5)))
     (= cost_1_1 1)
))
(assert (or (not (and loopexists (or false  l_0 
) (= prim_1_1 5)))
     (= cost_1_1 1000)
))

(assert (or (not (and (not loopexists) (= prim_1_1 6)))
     (= cost_1_1 (/ 150 100))
))
(assert (or (not (and loopexists (and true (not l_0) 
) (= prim_1_1 6)))
     (= cost_1_1 (/ 150 100))
))
(assert (or (not (and loopexists (or false  l_0 
) (= prim_1_1 6)))
     (= cost_1_1 1000)
))

(assert (or (not (and (not loopexists) (= prim_1_1 7)))
     (= cost_1_1 (/ 150 100))
))
(assert (or (not (and loopexists (and true (not l_0) 
) (= prim_1_1 7)))
     (= cost_1_1 (/ 150 100))
))
(assert (or (not (and loopexists (or false  l_0 
) (= prim_1_1 7)))
     (= cost_1_1 1000)
))

(assert (or (not (and (not loopexists) (= prim_1_1 8)))
     (= cost_1_1 (/ 150 100))
))
(assert (or (not (and loopexists (and true (not l_0) 
) (= prim_1_1 8)))
     (= cost_1_1 (/ 150 100))
))
(assert (or (not (and loopexists (or false  l_0 
) (= prim_1_1 8)))
     (= cost_1_1 1000)
))

(assert (or (not (and (not loopexists) (= prim_1_1 9)))
     (= cost_1_1 (/ 150 100))
))
(assert (or (not (and loopexists (and true (not l_0) 
) (= prim_1_1 9)))
     (= cost_1_1 (/ 150 100))
))
(assert (or (not (and loopexists (or false  l_0 
) (= prim_1_1 9)))
     (= cost_1_1 1000)
))

(assert (or (not (and (not loopexists) (= prim_2_1 1)))
     (= cost_2_1 0)
))
(assert (or (not (and loopexists (and true (not l_0) 
) (= prim_2_1 1)))
     (= cost_2_1 0)
))
(assert (or (not (and loopexists (or false  l_0 
) (= prim_2_1 1)))
     (= cost_2_1 1000)
))

(assert (or (not (and (not loopexists) (= prim_2_1 2)))
     (= cost_2_1 1)
))
(assert (or (not (and loopexists (and true (not l_0) 
) (= prim_2_1 2)))
     (= cost_2_1 1)
))
(assert (or (not (and loopexists (or false  l_0 
) (= prim_2_1 2)))
     (= cost_2_1 1000)
))

(assert (or (not (and (not loopexists) (= prim_2_1 3)))
     (= cost_2_1 1)
))
(assert (or (not (and loopexists (and true (not l_0) 
) (= prim_2_1 3)))
     (= cost_2_1 1)
))
(assert (or (not (and loopexists (or false  l_0 
) (= prim_2_1 3)))
     (= cost_2_1 1000)
))

(assert (or (not (and (not loopexists) (= prim_2_1 4)))
     (= cost_2_1 1)
))
(assert (or (not (and loopexists (and true (not l_0) 
) (= prim_2_1 4)))
     (= cost_2_1 1)
))
(assert (or (not (and loopexists (or false  l_0 
) (= prim_2_1 4)))
     (= cost_2_1 1000)
))

(assert (or (not (and (not loopexists) (= prim_2_1 5)))
     (= cost_2_1 1)
))
(assert (or (not (and loopexists (and true (not l_0) 
) (= prim_2_1 5)))
     (= cost_2_1 1)
))
(assert (or (not (and loopexists (or false  l_0 
) (= prim_2_1 5)))
     (= cost_2_1 1000)
))

(assert (or (not (and (not loopexists) (= prim_2_1 6)))
     (= cost_2_1 (/ 150 100))
))
(assert (or (not (and loopexists (and true (not l_0) 
) (= prim_2_1 6)))
     (= cost_2_1 (/ 150 100))
))
(assert (or (not (and loopexists (or false  l_0 
) (= prim_2_1 6)))
     (= cost_2_1 1000)
))

(assert (or (not (and (not loopexists) (= prim_2_1 7)))
     (= cost_2_1 (/ 150 100))
))
(assert (or (not (and loopexists (and true (not l_0) 
) (= prim_2_1 7)))
     (= cost_2_1 (/ 150 100))
))
(assert (or (not (and loopexists (or false  l_0 
) (= prim_2_1 7)))
     (= cost_2_1 1000)
))

(assert (or (not (and (not loopexists) (= prim_2_1 8)))
     (= cost_2_1 (/ 150 100))
))
(assert (or (not (and loopexists (and true (not l_0) 
) (= prim_2_1 8)))
     (= cost_2_1 (/ 150 100))
))
(assert (or (not (and loopexists (or false  l_0 
) (= prim_2_1 8)))
     (= cost_2_1 1000)
))

(assert (or (not (and (not loopexists) (= prim_2_1 9)))
     (= cost_2_1 (/ 150 100))
))
(assert (or (not (and loopexists (and true (not l_0) 
) (= prim_2_1 9)))
     (= cost_2_1 (/ 150 100))
))
(assert (or (not (and loopexists (or false  l_0 
) (= prim_2_1 9)))
     (= cost_2_1 1000)
))

(assert (= total_cost (+ cost_1_1 cost_2_1)))
(assert (= total_cost_1 (+ cost_1_1)))
(assert (= total_cost_2 (+ cost_2_1)))
(assert (<= total_cost (/ 60000000 10000000)))


(assert (=> loc1_1 (or r1loc1_1 r2loc1_1)))
(assert (=> loc1_2 (or r1loc1_2 r2loc1_2)))
(assert (=> loc2_1 (or r1loc2_1 r2loc2_1)))
(assert (=> loc2_2 (or r1loc2_2 r2loc2_2)))
(assert (=> loc3_1 (or r1loc3_1 r2loc3_1)))
(assert (=> loc3_2 (or r1loc3_2 r2loc3_2)))

(assert (=> r1loc1_1 (or (and (= x_1_1 3) (= y_1_1 5)))))
(assert (=> r2loc1_1 (or (and (= x_2_1 3) (= y_2_1 5)))))
(assert (=> r1loc1_2 (or (and (= x_1_2 3) (= y_1_2 5)))))
(assert (=> r2loc1_2 (or (and (= x_2_2 3) (= y_2_2 5)))))
(assert (=> r1loc2_1 (or (and (= x_1_1 3) (= y_1_1 7)))))
(assert (=> r2loc2_1 (or (and (= x_2_1 3) (= y_2_1 7)))))
(assert (=> r1loc2_2 (or (and (= x_1_2 3) (= y_1_2 7)))))
(assert (=> r2loc2_2 (or (and (= x_2_2 3) (= y_2_2 7)))))
(assert (=> r1loc3_1 (or (and (= x_1_1 5) (= y_1_1 2)))))
(assert (=> r2loc3_1 (or (and (= x_2_1 5) (= y_2_1 2)))))
(assert (=> r1loc3_2 (or (and (= x_1_2 5) (= y_1_2 2)))))
(assert (=> r2loc3_2 (or (and (= x_2_2 5) (= y_2_2 2)))))

(assert (=> r1loc1 (or r1loc1_1)))
(assert (=> (or r1loc1_1) assigned_r1_loc1))
(assert (=> r2loc1 (or r2loc1_1)))
(assert (=> (or r2loc1_1) assigned_r2_loc1))
(assert (=> r1loc2 (or r1loc2_1)))
(assert (=> (or r1loc2_1) assigned_r1_loc2))
(assert (=> r2loc2 (or r2loc2_1)))
(assert (=> (or r2loc2_1) assigned_r2_loc2))
(assert (=> r1loc3 (or r1loc3_1)))
(assert (=> (or r1loc3_1) assigned_r1_loc3))
(assert (=> r2loc3 (or r2loc3_1)))
(assert (=> (or r2loc3_1) assigned_r2_loc3))



(assert (=> p_1_1 (or loc2_1 loc3_1)))
(assert (=> (or loc2_1 loc3_1) p_1_1))
(assert (=> p_1_2 (or loc2_2 loc3_2)))
(assert (=> (or loc2_2 loc3_2) p_1_2))

(assert (=> p_2_1 (or p_1_1 (and true p_2_2))))
(assert (=> (or p_1_1 (and true p_2_2)) p_2_1))

(assert (= f_1_1 false))
(assert (=> loopexists (=> p_2_1 f_1_1)))

(assert (=> p_3_1 (or loc1_1 p_2_1)))
(assert (=> (or loc1_1 p_2_1) p_3_1))
(assert (=> p_3_2 (or loc1_2 p_2_2)))
(assert (=> (or loc1_2 p_2_2) p_3_2))

(assert (=> p_4_1 (or p_3_1 (and true p_4_2))))
(assert (=> (or p_3_1 (and true p_4_2)) p_4_1))

(assert (= f_2_1 false))
(assert (=> loopexists (=> p_4_1 f_2_1)))

(assert (=> (not loopexists) (= p_1_2 false)))
(assert (=> (not loopexists) (= p_2_2 false)))
(assert (=> (not loopexists) (= p_3_2 false)))
(assert (=> (not loopexists) (= p_4_2 false)))


(assert (= p_4_1 true))


(assert (= l_1 false))
(assert (= inloop_1 false))

(assert (= loopexists inloop_1))


(check-sat)
(get-value (prim_1_1))
(get-value (prim_2_1))

(get-value (x_1_1))
(get-value (y_1_1))
(get-value (x_1_2))
(get-value (y_1_2))
(get-value (x_2_1))
(get-value (y_2_1))
(get-value (x_2_2))
(get-value (y_2_2))

(get-value (vel_i_1_1))
(get-value (vel_i_2_1))

(get-value (vel_f_1_1))
(get-value (vel_f_2_1))

(get-value (x_f_1_1))
(get-value (y_f_1_1))
(get-value (x_f_2_1))
(get-value (y_f_2_1))

(get-value (cost_1_1))
(get-value (cost_2_1))
(get-value (total_cost))
(get-value (total_cost_1))
(get-value (total_cost_2))

(get-value (r1loc1_1))
(get-value (r1loc1_2))
(get-value (r2loc1_1))
(get-value (r2loc1_2))
(get-value (r1loc2_1))
(get-value (r1loc2_2))
(get-value (r2loc2_1))
(get-value (r2loc2_2))
(get-value (r1loc3_1))
(get-value (r1loc3_2))
(get-value (r2loc3_1))
(get-value (r2loc3_2))

(get-value (r1loc1))
(get-value (assigned_r1_loc1))
(get-value (r2loc1))
(get-value (assigned_r2_loc1))
(get-value (r1loc2))
(get-value (assigned_r1_loc2))
(get-value (r2loc2))
(get-value (assigned_r2_loc2))
(get-value (r1loc3))
(get-value (assigned_r1_loc3))
(get-value (r2loc3))
(get-value (assigned_r2_loc3))

(get-value (l_1))

